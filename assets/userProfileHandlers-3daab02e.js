import{l as u}from"./index-096ee2ea.js";import{aG as M,aH as I,aI as T,aJ as b,aK as D,aL as U,aM as y,aN as O,aO as C}from"./ApplicationSessionManager-99c1baec.js";import{g as B,B as $}from"./getEndpoint-ac94413e.js";import{T as g}from"./index-01eb1463.js";import{b as k}from"./mockEntity-37044b80.js";import{M as c,b as d,e as L,f as q,g as N,m as l,h as m,c as H}from"./mock_user_profile-cefba5e4.js";import{n as S,l as E,m as h}from"./SynapseConstants-eb00dc31.js";const f=987654,v=987655,G=987656,j=987657,w=987658,p={id:String(f),name:"Mock Team",description:"A team that already has super cool fake users",icon:"",canPublicJoin:!0,canRequestMembership:!0,etag:"f29b79d6-5b63-4641-93c7-30d954b4328c",createdOn:"2013-11-02T01:01:18.373Z",modifiedOn:"2019-01-31T20:34:40.057Z",createdBy:String(c),modifiedBy:String(d)},A={id:String(v),name:"Mock team public can join",description:"A team for fake users to join",icon:"",canPublicJoin:!0,canRequestMembership:!1,etag:"f29b79d6-5b63-4641-93c7-30d954b4328c",createdOn:"2013-11-02T01:01:18.373Z",modifiedOn:"2019-01-31T20:34:40.057Z",createdBy:String(c),modifiedBy:String(d)},P={id:String(G),name:"Mock team public can request to join",description:"A team for fake users to request to join",icon:"",canPublicJoin:!1,canRequestMembership:!0,etag:"f29b79d6-5b63-4641-93c7-30d954b4328c",createdOn:"2013-11-02T01:01:18.373Z",modifiedOn:"2019-01-31T20:34:40.057Z",createdBy:String(c),modifiedBy:String(d)},R={id:String(j),name:"Mock team with open invitation",description:"A team that fake users have been invited to join",icon:"",canPublicJoin:!1,canRequestMembership:!1,etag:"f29b79d6-5b63-4641-93c7-30d954b4328c",createdOn:"2013-11-02T01:01:18.373Z",modifiedOn:"2019-01-31T20:34:40.057Z",createdBy:String(c),modifiedBy:String(d)},J={id:String(w),name:"Mock team with open invitation",description:"A team that users must join to participate in the challenge",icon:"",canPublicJoin:!0,etag:"f29b79d6-5b63-4641-93c7-30d954b4328c",createdOn:"2013-11-02T01:01:18.373Z",modifiedOn:"2019-01-31T20:34:40.057Z",createdBy:String(c),modifiedBy:String(d)},Z={id:f,userProfile:null,userBundle:null,userGroupHeader:{ownerId:f.toString(),userName:p.name,isIndividual:!1}},F={id:S,userProfile:null,userBundle:null,userGroupHeader:{ownerId:S.toString(),userName:"Synapse Access and Compliance Team",isIndividual:!1}},se=[p,A,P,R,J],te=[{teamId:p.id,userId:String(c),isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!0,hasUnmetAccessRequirement:!1,canSendEmail:!0},{teamId:A.id,userId:String(c),isMember:!1,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1},{teamId:P.id,userId:String(c),isMember:!1,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!1,membershipApprovalRequired:!0,hasUnmetAccessRequirement:!1,canSendEmail:!1},{teamId:R.id,userId:String(c),isMember:!1,hasOpenInvitation:!0,hasOpenRequest:!1,canJoin:!1,membershipApprovalRequired:!0,hasUnmetAccessRequirement:!1,canSendEmail:!1}],K={id:E,userProfile:null,userBundle:null,userGroupHeader:{ownerId:E.toString(),userName:"PUBLIC",isIndividual:!1}},W={id:h,userProfile:null,userBundle:null,userGroupHeader:{ownerId:h.toString(),userName:"AUTHENTICATED_USERS",isIndividual:!1}},_=[L,q,N,Z,F,W,K],ae=o=>[u.rest.get(`${o}${M(":id")}`,async(a,t,e)=>{let s=404,n={reason:`Mock Service worker could not find a user profile with ID ${a.params.id}`};const r=l.find(i=>i.id.toString()===a.params.id);return r&&r.userProfile&&(n=r.userProfile,s=200),t(e.status(s),e.json(n))}),u.rest.get(`${o}${I}`,async(a,t,e)=>{const s=H,n=200;return t(e.status(n),e.json(s))}),u.rest.get(`${B($.REPO_ENDPOINT)}${T}`,async(a,t,e)=>{const s=m;return t(e.status(200),e.json(s))}),u.rest.get(`${o}${b(":id")}`,async(a,t,e)=>{let s=404,n={reason:`Mock Service worker could not find a user bundle with ID ${a.params.id}`};const r=l.find(i=>i.id.toString()===a.params.id);return r&&r.userBundle&&(n=r.userBundle,s=200),t(e.status(s),e.json(n))}),u.rest.get(`${o}${D}`,async(a,t,e)=>t(e.status(200),e.json(k))),u.rest.get(`${o}${U}`,async(a,t,e)=>{const s=a.url.searchParams.get("ids").split(","),n={children:_.filter(r=>s.includes(r.id.toString())).map(r=>r.userGroupHeader)};return t(e.status(200),e.json(n))}),u.rest.post(`${o}${I}`,async(a,t,e)=>{const s=(await a.json()).list,n={list:l.filter(r=>s.includes(r.id.toString())).map(r=>r.userProfile).filter(r=>r!=null)};return t(e.status(200),e.json(n))}),u.rest.get(`${o}${y}`,async(a,t,e)=>{const s=(a.url.searchParams.get("prefix")??"").toLowerCase(),n=a.url.searchParams.get("typeFilter"),r={children:_.filter(i=>!n||n===g.ALL?!0:n===g.USERS_ONLY?i.userGroupHeader.isIndividual:!i.userGroupHeader.isIndividual).filter(i=>i.userGroupHeader.userName.toLowerCase().startsWith(s)||(i.userGroupHeader.firstName||"").toLowerCase().startsWith(s)||(i.userGroupHeader.displayName||"").toLowerCase().startsWith(s)||(i.userGroupHeader.lastName||"").toLowerCase().startsWith(s)).map(i=>i.userGroupHeader)};return t(e.status(200),e.json(r))}),u.rest.get(`${o}${O(":userId")}`,async(a,t,e)=>t(e.status(404),e.json({reason:"user has no profile image"}))),u.rest.get(`${o}${C}`,async(a,t,e)=>{var s;return t(e.status(200),e.json({email:(s=m.userProfile)==null?void 0:s.email}))}),u.rest.get(`${o}/auth/v1/2fa`,async(a,t,e)=>{const s={status:"ENABLED"};return t(e.status(200),e.json(s))})];function re(o,a,t){return u.rest.get(`${o}${T}`,async(e,s,n)=>{const i={...m,isCertified:a,isVerified:t};return s(n.status(200),n.json(i))})}export{w as M,ae as a,v as b,G as c,j as d,te as e,re as g,se as m};
