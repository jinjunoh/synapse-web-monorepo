import{j as l}from"./jsx-runtime-sFfnwXut.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-Dg4Xtmbq.js";import{aH as S,M as a}from"./useFiles-BAztOM91.js";import"./OrientationBanner-DZLRXPBS.js";import"./index-DoX8G8Yn.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-CPqnTWqX.js";import{S as E}from"./SynapseFormSubmissionGrid-B6grUHJh.js";import"./mockSchema-YTNkxl9b.js";import"./mockFileEntity-DK0xPSSx.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-a6Ogh8UH.js";import"./mockTeam-DI6s6vZA.js";import"./SynapseConstants-BV1FnhM-.js";import"./uniqueId-DhyEOYfX.js";import"./toString-DPacUVIx.js";import"./isObjectLike-W-5SY7AE.js";import"./iframe-BOtctWXf.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-u98OqEww.js";import"./times-voXjsHZL.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-s9L7yZI9.js";import"./asyncJobHandlers-w-cv-LLa.js";import"./BasicMockedCrudService-CJ4toIic.js";import"./cloneDeep-C5yUkUZw.js";import"./_Uint8Array-DGr81fNM.js";import"./_initCloneObject-B6hdgTGA.js";import"./_getTag-Bg2ClzcD.js";import"./isEqual-DHYe3gFh.js";import"./_baseIsEqual-UpQwY295.js";import"./mockAnnotationColumns-DAkOVNl-.js";import"./tableQueryHandlers-C0FHWL6H.js";import"./omit-DqrAFxlQ.js";import"./_baseGet-AvVx7jKK.js";import"./isNil-Cu8hF2Sa.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DY6OYJwb.js";import"./_baseFlatten-Cu4h1DBy.js";import"./pick-BSgUU7Zr.js";import"./_baseSet-CxC8T1fk.js";import"./hasIn-DQMFouS-.js";import"./accessRequirementAclHandlers-vOTJi6TA.js";import"./mockAccessRequirementAcls-B1-Ih9nH.js";import"./mockAccessRequirements-CTTp4Lek.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-VwG_WrlZ.js";import"./wikiHandlers-JoEiXrwf.js";import"./mockWikiPageKey-DRX7urAJ.js";import"./teamHandlers-DR0wmUbe.js";import"./dataAccessRequestHandlers-BAyPz21Z.js";import"./MockResearchProject-uFXUH-5W.js";import"./mock_discussion-DTyFsdI8.js";import"./fakerUtils-OKy3eAog.js";import"./index-CmBfNxOa.js";import"./mockTableEntity-DfPcxHzQ.js";import"./mockFileEntityACLVariants-Cf8aNf9A.js";import"./entityHandlers-Cvn9ntyO.js";import"./mockEntity-Bae1okuU.js";import"./mockEvaluationQueue-tokaMrUe.js";import"./featureFlagHandlers-axZuivFK.js";import"./fileHandlers-DARwPY1o.js";import"./personalAccessTokenHandlers-CSYKCnA2.js";import"./researchProjectHandlers-KHukxG9m.js";import"./resetTwoFactorAuthHandlers-4330QRY-.js";import"./userProfileHandlers-B3ZZOlJL.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Cs50VxMP.js";import"./FullWidthAlert-DdsNYV_r.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CQ28KUOq.js";import"./createTheme-DHcStZw4.js";import"./resolveComponentProps-sx1GxMoy.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BASbR04R.js";import"./createSvgIcon-Dfjq89og.js";import"./DefaultPropsProvider-C-RPZdZK.js";import"./Close-7a38B2Cx.js";import"./IconButton-BQJSsQhZ.js";import"./ButtonBase-BqN1Mknx.js";import"./useTimeout-2iA2BCss.js";import"./useIsFocusVisible-Ct3DzPDN.js";import"./useEventCallback-D_0zaytn.js";import"./Paper-D1M3GfB_.js";import"./Stack-CtPD3DEl.js";import"./getThemeProps-BBnWsZZg.js";import"./useTheme-CiPF9lgI.js";import"./Box-6xXXNy_r.js";import"./AlertTitle-D8uI4v6s.js";import"./Typography-jqLTKSXk.js";import"./useTheme-Cp3zXvWU.js";import"./Grow-DE65aWdL.js";import"./index-D7qSZK1D.js";import"./utils-DwWd54TM.js";import"./ClickAwayListener-Bz8ukuYa.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CS9uLZrQ.js";import"./index-K2IgKp72.js";import"./useControlled-CecgBugt.js";import"./useId-BvBS4gU1.js";import"./Popper-CcZx8wRW.js";import"./Button-98QRmISR.js";import"./useQuery-H8ocXwz_.js";import"./utils-Jbo6HY6n.js";import"./Link-Z9-Bxnys.js";import"./Collapse-hAUQrpq4.js";import"./tinycolor-Begke6kS.js";import"./Fade-BdCl9RIG.js";import"./Skeleton-CMt54XYP.js";import"./inputBaseClasses-D5mHKxj0.js";import"./calculateFriendlyFileSize-Bdrarzqm.js";import"./CheckCircleTwoTone-757-9O45.js";import"./InfoTwoTone-DjAK_Iz5.js";import"./mutation-UdZ4-wHU.js";import"./dayjs.min-D152OlRy.js";import"./chunk-AYJ5UCUI-BO2N_b-R.js";import"./index-C5AZOy6D.js";import"./react-Ci4EP5se.js";import"./util-BSbMtqI1.js";import"./WideButton-BnoT8wq6.js";import"./DeleteTwoTone-Bg-04JlS.js";import"./createSvgIcon-qoEU9h6m.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Dzg_APJz.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-ovA-KGNT.js";import"./DialogBase-D5osUoyY.js";import"./Close-DnJ3B_EC.js";import"./HelpPopover-ZpDVREmu.js";import"./MarkdownPopover-BDFOvQVR.js";import"./LightTooltip-0EJRxtBi.js";import"./MarkdownSynapse-Dc6X1srP.js";import"./SkeletonButton-BjaLet9I.js";import"./SkeletonInlineBlock-CbmKnQpZ.js";import"./SkeletonTable-6coR2bK4.js";import"./SkeletonParagraph-QjDlxYhu.js";import"./HelpOutlineTwoTone-DFePhH1s.js";import"./DialogTitle-DxwCrILt.js";import"./DialogContent-94JyqHuc.js";import"./Dialog-DeBvPGtv.js";import"./Modal-DtJBpwwb.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-C7C66lZf.js";import"./WarningDialog-Bc8eyL1r.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
