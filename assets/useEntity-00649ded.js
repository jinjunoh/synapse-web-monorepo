import{R as k,r as C}from"./index-76fb7be0.js";import{_ as w,aq as R,ae as M,b9 as S,ba as F,af as q,K as m,bb as K,v as d,J as g,x as v,bc as T}from"./SynapseClient-ceb0e6d4.js";import{u as E}from"./useMutation-dd95c1dd.js";import{u as P}from"./useInfiniteQuery-49bff1c8.js";import"./getEndpoint-ac94413e.js";import"./OrientationBanner-1c6f5b11.js";import"./jsx-runtime-9dc53467.js";import{i as I}from"./isEqual-592f8fa4.js";import{g as U}from"./InfiniteQueryUtils-54ae7e6b.js";import{p as x,o as G}from"./pick-ab089642.js";var _=function(t){w(s,t);function s(r,n){var e;return e=t.call(this)||this,e.client=r,e.queries=[],e.result=[],e.observers=[],e.observersMap={},n&&e.setQueries(n),e}var a=s.prototype;return a.onSubscribe=function(){var n=this;this.listeners.length===1&&this.observers.forEach(function(e){e.subscribe(function(u){n.onUpdate(e,u)})})},a.onUnsubscribe=function(){this.listeners.length||this.destroy()},a.destroy=function(){this.listeners=[],this.observers.forEach(function(n){n.destroy()})},a.setQueries=function(n,e){this.queries=n,this.updateObservers(e)},a.getCurrentResult=function(){return this.result},a.getOptimisticResult=function(n){return this.findMatchingObservers(n).map(function(e){return e.observer.getOptimisticResult(e.defaultedQueryOptions)})},a.findMatchingObservers=function(n){var e=this,u=this.observers,c=n.map(function(l){return e.client.defaultQueryObserverOptions(l)}),f=c.flatMap(function(l){var b=u.find(function(O){return O.options.queryHash===l.queryHash});return b!=null?[{defaultedQueryOptions:l,observer:b}]:[]}),i=f.map(function(l){return l.defaultedQueryOptions.queryHash}),o=c.filter(function(l){return!i.includes(l.queryHash)}),h=u.filter(function(l){return!f.some(function(b){return b.observer===l})}),y=o.map(function(l,b){if(l.keepPreviousData){var O=h[b];if(O!==void 0)return{defaultedQueryOptions:l,observer:O}}return{defaultedQueryOptions:l,observer:e.getObserver(l)}}),p=function(b,O){return c.indexOf(b.defaultedQueryOptions)-c.indexOf(O.defaultedQueryOptions)};return f.concat(y).sort(p)},a.getObserver=function(n){var e=this.client.defaultQueryObserverOptions(n),u=this.observersMap[e.queryHash];return u??new R(this.client,e)},a.updateObservers=function(n){var e=this;M.batch(function(){var u=e.observers,c=e.findMatchingObservers(e.queries);c.forEach(function(y){return y.observer.setOptions(y.defaultedQueryOptions,n)});var f=c.map(function(y){return y.observer}),i=Object.fromEntries(f.map(function(y){return[y.options.queryHash,y]})),o=f.map(function(y){return y.getCurrentResult()}),h=f.some(function(y,p){return y!==u[p]});u.length===f.length&&!h||(e.observers=f,e.observersMap=i,e.result=o,e.hasListeners()&&(S(u,f).forEach(function(y){y.destroy()}),S(f,u).forEach(function(y){y.subscribe(function(p){e.onUpdate(y,p)})}),e.notify()))})},a.onUpdate=function(n,e){var u=this.observers.indexOf(n);u!==-1&&(this.result=F(this.result,u,e),this.notify())},a.notify=function(){var n=this;M.batch(function(){n.listeners.forEach(function(e){e(n.result)})})},s}(q);function A(t){var s=k.useRef(!1),a=k.useState(0),r=a[1],n=m(),e=C.useMemo(function(){return t.map(function(i){var o=n.defaultQueryObserverOptions(i);return o.optimisticResults=!0,o})},[t,n]),u=k.useState(function(){return new _(n,e)}),c=u[0],f=c.getOptimisticResult(e);return k.useEffect(function(){s.current=!0;var i=c.subscribe(M.batchCalls(function(){s.current&&r(function(o){return o+1})}));return function(){s.current=!1,i()}},[c]),k.useEffect(function(){c.setQueries(e,{listeners:!1})},[e,c]),f}async function J(t,s,a,r){const n=new Map;for(const i of a)n.set(i.id,i);let e=[];for(const i of r){const o={...i};if(o.id!=null){const h=n.get(o.id);h!=null&&!I(h,o)&&delete o.id}e.push(o)}const u=(await K(t,e)).list,c=[],f=new Set;for(let i=0;i<r.length;i++){const o=r[i].id??null,h=u[i].id??null;f.add(o),f.add(h),o!==h&&c.push({oldColumnId:o,newColumnId:h})}for(const i of a){const o=i.id;f.has(o)||c.push({oldColumnId:o,newColumnId:null})}return{concreteType:"org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest",entityId:s,changes:[{concreteType:"org.sagebionetworks.repo.model.table.TableSchemaChangeRequest",entityId:s,changes:c,orderedColumnIds:u.map(i=>i.id)}]}}function Q(t,s,a){return t.invalidateQueries(s.getEntityQueryKey(a))}function N(t,s,a){const{accessToken:r,keyFactory:n}=d();return g(n.getEntityVersionQueryKey(t,s),()=>v.getEntity(r,t,s==null?void 0:s.toString()),a)}function ee(t,s){const{accessToken:a,keyFactory:r}=d(),n=t.map(i=>i.id).join(),e=C.useMemo(()=>t.map(i=>({queryKey:r.getEntityVersionQueryKey(i.id,i.versionNumber),queryFn:()=>v.getEntity(a,i.id,i.versionNumber)})),[n]),u=A(e),c=u.some(i=>i.isLoading),f=u.filter(i=>i.data!==void 0).map(i=>i.data);return C.useMemo(()=>(!c&&(s!=null&&s.onSuccess)&&s.onSuccess(f),{isLoading:c,data:f}),[c,n])}function te(t){const s=m(),{accessToken:a,keyFactory:r}=d();return E(n=>v.createEntity(n,a),{onSuccess:async(n,e,u)=>{await Q(s,r,n.id),s.setQueryData(r.getEntityQueryKey(n.id),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,u)}})}function ne(t){const s=m(),{accessToken:a,keyFactory:r}=d();return E(n=>v.updateEntity(n,a),{...t,onSuccess:async(n,e,u)=>{await Q(s,r,n.id),s.setQueryData(r.getEntityQueryKey(n.id),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,u)}})}function se(t){const s=m(),{accessToken:a,keyFactory:r}=d();return E(n=>v.deleteEntity(a,n),{...t,onSuccess:async(n,e,u)=>{await Q(s,r,e),t!=null&&t.onSuccess&&await t.onSuccess(n,e,u)}})}function re(t,s){const{accessToken:r,keyFactory:n}=d();return P(n.getEntityVersionsQueryKey(t),async e=>await v.getEntityVersions(t,r,e.pageParam,200),{...s,getNextPageParam:U})}function L(t){return x(t,T[t.concreteType])}function H(t){return G(t,T[t.concreteType])}function ae(t,s,a){const{accessToken:r,keyFactory:n}=d(),e=g(n.getEntityJsonQueryKey(t,s),()=>v.getEntityJson(t,s,r),a),u=C.useMemo(()=>(e==null?void 0:e.data)==null?void 0:L(e.data),[e.data]),c=C.useMemo(()=>(e==null?void 0:e.data)==null?void 0:H(e.data),[e.data]);return{...e,entityMetadata:u,annotations:c}}function ue(t){const s=m(),{accessToken:a,keyFactory:r}=d();return E(n=>{const e=n.id;return v.updateEntityJson(e,n,a)},{...t,onSuccess:async(n,e,u)=>{const c=n.id;await Q(s,r,c),s.setQueryData(r.getEntityJsonQueryKey(c,!1),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,u)}})}function ie(t,s){const{accessToken:a,keyFactory:r}=d();return g(r.getEntityPathQueryKey(t),()=>v.getEntityPath(t,a),s)}function ce(t,s){const{accessToken:a,keyFactory:r}=d();return g(r.getEntityPathQueryKey(t),()=>v.getEntityACL(t,a),s)}function oe(t,s){const{accessToken:a,keyFactory:r}=d();return g(r.getEntityAliasQueryKey(t),()=>v.getEntityAlias(t,a),s)}function fe(t,s,a){const{accessToken:r,keyFactory:n}=d();return g(n.getEntityEvaluationsQueryKey(t),()=>v.getAllEntityEvaluations(t,s,r),a)}function ye(t,s){const{accessToken:a,keyFactory:r}=d();return g(r.getEntityAliasQueryKey(t),()=>v.getEntityPermissions(t,a),s)}function le(t){const s=m(),{accessToken:a,keyFactory:r}=d();return E(n=>v.updateEntityACL(n,a),{...t,onSuccess:async(n,e,u)=>{await Q(s,r,n.id),s.setQueryData(r.getEntityACLQueryKey(n.id),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,u)}})}function de(t){const s=m(),{accessToken:a,keyFactory:r}=d();return E(async n=>{const e=await J(a,n.entityId,n.originalColumnModels,n.newColumnModels);return v.updateTable(e,a)},{...t,onSuccess:async(n,e,u)=>{await Q(s,r,e.entityId),t!=null&&t.onSuccess&&await t.onSuccess(n,e,u)}})}export{de as a,ie as b,ne as c,ae as d,te as e,ee as f,fe as g,le as h,Q as i,oe as j,ce as k,ye as l,ue as m,se as n,re as o,N as u};
//# sourceMappingURL=useEntity-00649ded.js.map
