import{l as d}from"./index-643c5ae5.js";import{A as E,q as p,r as S,s as A}from"./SynapseClient-ceb0e6d4.js";import{M as R}from"./getEndpoint-ac94413e.js";import{O as g,M as _,S as T}from"./index-7db48dfb.js";import{m as u,a as f,b as m}from"./wikiHandlers-75555499.js";const M=o=>[d.rest.get(`${o}${E(":id")}`,async(t,e,r)=>{let a=404,s={reason:`Mock Service worker could not find an access requirement with ID ${t.params.id}`};const i=u.find(n=>n.id.toString()===t.params.id);return i&&(s=i,a=200),e(r.status(a),r.json(s))}),d.rest.get(`${o}${p(":id")}`,async(t,e,r)=>{let a=404,s={reason:`Mock Service worker could not find an access requirement wiki page key with AR ID ${t.params.id}`};const i=f.find(n=>(n.ownerObjectType===g.ACCESS_REQUIREMENT&&n.ownerObjectId.toString())===t.params.id);return i&&(s=i,a=200),e(r.status(a),r.json(s))})],k=(o,t=":entityId",e=u)=>[d.rest.get(`${R}${S(t)}`,async(r,a,s)=>{const n={results:e,totalNumberOfResults:e.length};return a(s.status(200),s.json(n))})],O=(o,t={})=>[d.rest.get(`${o}${A(":id")}`,async(e,r,a)=>{let s;const i=u.find(c=>e.params.id===c.id.toString());if(typeof e.params.id=="string"&&e.params.id in t&&(s=t[e.params.id]),!s&&i){const c=i.concreteType===_;s={accessRequirementId:e.params.id,concreteType:c?"org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus":"org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus",isApproved:!0,currentSubmissionStatus:c?{submissionId:m.id,submittedBy:m.submittedBy,modifiedOn:m.modifiedOn,state:T.APPROVED}:void 0}}const n=s?200:404;return r(a.status(n),a.json(s))})];export{k as a,O as b,M as g};
//# sourceMappingURL=accessRequirementHandlers-efa8a4ee.js.map
